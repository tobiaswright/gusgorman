---
interface Items {
	name?: string;
    alias?: string;
    title: string;
    media: string;
    actor: string;
    id: string; 
    imageSrc?: string;
    charName?: string;
}

import Card from '../components/Card.astro';

const { items } = Astro.props;

let images = await Astro.glob("../../public/images/*").then(files => {
        return files.map(file => file.default)
})


let transformName = (name: string): string => {
  return name.split(" ").join("-").toLowerCase();
};

let getImage = (id: string) => {
    for (let image of images) {
        if (image.src.includes(id)) return "./images/"+id+".jpg";
    }
    return "./images/placeholder.jpg";
}

let returnPayload = (charName: string) => {
  let id = transformName(charName);
  let imageSrc = getImage(id);
  return { id, imageSrc, charName };
};

let getItems =  (items:[Items]) => {
    items.forEach(  (item: Items) => {
        let temp;
        if (item.alias) {
            temp =  returnPayload(item.alias);
        } else if (item.name) {
            temp = returnPayload(item.name);
        }
        item["imageSrc"] = temp?.imageSrc
        item["charName"] =temp?.charName 
    })

    return items
}

let cards = getItems(items);

console.log(cards)
---
<ul id="list">
    {cards.map( (card: Items) => (
        <li class="mb-10"><Card {...card} /></li>
    ))}
</ul>